apply plugin: 'com.android.application'
apply plugin: 'com.xuexiang.xaop' //引用xaop插件
apply plugin: 'com.xuexiang.xrouter' //引用xrouter-plugin插件实现自动注册
apply plugin: 'img-optimizer' //图片资源压缩处理
//打包时，记得设置true启用
if (isNeedPackage.toBoolean()) {
    apply plugin: 'com.didiglobal.booster'
}

android {
    compileSdkVersion build_versions.target_sdk
    buildToolsVersion build_versions.build_tools

    defaultConfig {
        applicationId "com.xuexiang.imageprocess"
        minSdkVersion 21
        targetSdkVersion build_versions.target_sdk
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [ moduleName : project.getName() ]
            }
        }
    }

    signingConfigs {
        if (isNeedPackage.toBoolean()) {
            release {
                storeFile file(app_release.storeFile)
                storePassword app_release.storePassword
                keyAlias app_release.keyAlias
                keyPassword app_release.keyPassword
            }
        }

        debug {
            storeFile file("./debug.jks")
            storePassword "123456"
            keyAlias "debug"
            keyPassword "123456"
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            if (isNeedPackage.toBoolean()) {
                signingConfig signingConfigs.release
            }
        }
        debug {
            debuggable true
            minifyEnabled false
            signingConfig signingConfigs.debug
        }
    }

    if (isNeedPackage.toBoolean()) {
        applicationVariants.all { variant ->
            variant.outputs.all {
                if (variant.buildType.name.equals('release')) {
                    outputFileName = "template_${defaultConfig.versionName}.apk"
                }
            }
        }
    }

    lintOptions {
        abortOnError false
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation deps.support.app_compat
    testImplementation deps.junit
    androidTestImplementation deps.runner
    androidTestImplementation deps.espresso.core

    //工具类
    implementation 'com.github.xuexiangjys.XUtil:xutil-core:1.1.6'
    implementation 'com.github.xuexiangjys.XUtil:xutil-sub:1.1.6'

    //切片
    implementation 'com.github.xuexiangjys.XAOP:xaop-runtime:1.0.5'  //添加依赖

    //XPage
    implementation 'com.github.xuexiangjys.XPage:xpage-lib:2.2.7'
    annotationProcessor 'com.github.xuexiangjys.XPage:xpage-compiler:2.2.7'
    //页面路由
    implementation 'com.github.xuexiangjys.XRouter:xrouter-runtime:1.0.1'
    annotationProcessor 'com.github.xuexiangjys.XRouter:xrouter-compiler:1.0.1'
    //ButterKnife的sdk
    implementation deps.butterknife.runtime
    annotationProcessor deps.butterknife.compiler
    //如果开启了内存泄漏监测leak,就需要加上这个依赖
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.3'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.3'
    testImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.3'

    //OpenCV
    implementation project(path: ':opencv-sdk')
}
